services:
 redis_1:
    image: "redis:latest"
    container_name: redis_1
    ports:
      - "6379"
    volumes:
      - redis_1_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      app-network:
       ipv4_address: 173.17.0.2

 configsrv:
    image: mongo:latest 
    container_name: configsrv 
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",  
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

 shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard1", 
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s 

 shard1_mongodb2:
    image: mongo:latest
    container_name: shard1_mongodb2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - shard1-mongodb2-data:/data/db
    command:
      [
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

 shard1_mongodb3:
    image: mongo:latest
    container_name: shard1_mongodb3
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - shard1-mongodb3-data:/data/db
    command:
      [
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

 shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard2", 
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

 shard2_mongodb2:
    image: mongo:latest
    container_name: shard2_mongodb2
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    volumes:
      - shard2-mongodb2-data:/data/db
    command:
      [
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

 shard2_mongodb3:
    image: mongo:latest
    container_name: shard2_mongodb3
    restart: always
    ports:
      - "2723:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.14
    volumes:
      - shard2-mongodb3-data:/data/db
    command:
      [
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

 mongo_test1:
    image: mongo:latest
    container_name: mongo_test1
    ports:
      - "27030:27030"
    networks:
      app-network:
        ipv4_address: 173.17.0.100  
    volumes:
      - mongo_test1:/data/db
    command: ["--replSet","shard21","--bind_ip_all", "--port", "27030"]   
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s  

 mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.15
    command:
      [
        "mongos", 
        "--configdb", 
        "config_server/configsrv:27017", 
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s 

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  redis_1_data: {}
  config-data:
  shard1-data:
  shard2-data:
  shard1-mongodb2-data:
  shard1-mongodb3-data: 
  shard2-mongodb2-data:
  shard2-mongodb3-data: 
  mongo_test1:  